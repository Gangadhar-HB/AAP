---
# wrapper_launch_vm.yml
# Purpose: Launch multiple VMs in parallel asynchronously and track their completion

- hosts: localhost
  gather_facts: no
  vars:
    successful_vms: []
    failed_vms: []

  tasks:

    # -------------------------------------------------------------
    # 1️⃣ Launch all VMs in parallel
    # -------------------------------------------------------------
    - name: "Launch each VM asynchronously"
      ansible.builtin.include_tasks: launch_vm_task.yml
      loop: "{{ vm_list }}"
      loop_control:
        loop_var: vm_item
      vars:
        vm_name: "{{ vm_item.name }}"
        vm_info: "{{ vm_item }}"
      register: vm_launch_results

    - name: "Collect async job info from launched VMs"
      set_fact:
        launched_vms: >-
          {%- set vms = [] -%}
          {%- for r in vm_launch_results.results -%}
            {%- set _ = vms.append({
                  'name': r.item.name,
                  'hostip': r.item.hostip,
                  'job_id': r.ansible_facts.create_vm_job_id
            }) -%}
          {%- endfor -%}
          {{ vms }}

    - name: "Debug launched VM jobs"
      ansible.builtin.debug:
        msg: "{{ launched_vms }}"

    # -------------------------------------------------------------
    # 2️⃣ Wait for async VM jobs to complete
    # -------------------------------------------------------------
    - name: "Wait for VM async jobs to finish"
      ansible.builtin.include_tasks: wait_vm_async.yml
      loop: "{{ launched_vms }}"
      loop_control:
        loop_var: item

