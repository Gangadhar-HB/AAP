---
- hosts: localhost
  gather_facts: no
  vars:
    successful_vms: []
    failed_vms: []
    launched_vms: []

  tasks:

    - name: "Launch all VMs in parallel using create_vm role"
      ansible.builtin.include_role:
        name: create_vm
      loop: "{{ vm_list }}"
      loop_control:
        loop_var: vm_item
      vars:
        vm_name: "{{ vm_item.name }}"
        vm_info: "{{ vm_item }}"
      register: vm_launch_results

    - name: "Store async job details for all launched VMs"
      set_fact:
        launched_vms: >-
          {%- set vms = [] -%}
          {%- for r in vm_launch_results.results -%}
            {%- set _ = vms.append({
                  'name': r.item.name,
                  'hostip': r.item.hostip,
                  'job_id': r.ansible_facts.create_vm_job_id
            }) -%}
          {%- endfor -%}
          {{ vms }}

    - name: "Debug: list of launched VM async jobs"
      ansible.builtin.debug:
        msg: "{{ launched_vms }}"

    # =============================================================
    # Wait for async VM jobs to finish and handle success/failure
    # =============================================================
    - name: "Check VM async jobs one by one"
      ansible.builtin.include_tasks: check_vm_async.yml
      loop: "{{ launched_vms }}"
      loop_control:
        loop_var: current_vm

