---
# Play 1: Load successful VMs and create dynamic inventory
- hosts: all
  gather_facts: no
  vars:
    failed_vms: []
    bms: []              # List of BM IPs
    bms_vms: {}          # Mapping of BM to its VMs
    inventory_file: "/tmp/dynamic_inventory.ini"
  tasks:

    - name: Load successful VMs from JSON file
      slurp:
        src: "/tmp/successful_vms.json"
      register: successful_vms_file

    - name: Set successful_vms fact
      set_fact:
        successful_vms: "{{ successful_vms_file.content | b64decode | from_json }}"

    - name: Ensure we have successful VMs
      assert:
        that:
          - successful_vms | length > 0
        fail_msg: "No successful VMs found. Nothing to post-configure."
        success_msg: "Found {{ successful_vms | length }} VMs to post-configure."

    - name: Prepare BM list and VM mapping
      set_fact:
        bms: "{{ bms | union([item.hostip]) }}"
        bms_vms: "{{ bms_vms | combine({ item.hostip: (bms_vms[item.hostip] | default([])) + [ {'name': item.name, 'ip_address': item.ip_address} ] }) }}"
      loop: "{{ successful_vms }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Initialize inventory content
      set_fact:
        inventory_content: "[BM]\n{{ bms | join('\n') }}\n\n"

    - name: Add VM groups for each BM
      set_fact:
        inventory_content: "{{ inventory_content + '[VM_' + item.key + ']\n' + item.value | map(attribute='ip_address') | join('\n') + '\n\n' }}"
      loop: "{{ bms_vms | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Save dynamic inventory file
      copy:
        content: "{{ inventory_content }}"
        dest: "{{ inventory_file }}"
      delegate_to: localhost

    - name: Push dynamic inventory to AAP UI
      shell: >
        awx inventory update
        --name "Dynamic_VM_Inventory"
        --organization "Default"
        --inventory-source "{{ inventory_file }}"
      delegate_to: localhost
      register: aap_inventory_update
      failed_when: aap_inventory_update.rc != 0

    - name: Debug AAP update result
      debug:
        var: aap_inventory_update.stdout
