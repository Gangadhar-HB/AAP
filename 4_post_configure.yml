---
# Play 1: Load successful VMs and create dynamic inventory
- hosts: all
  gather_facts: no
  vars:
    failed_vms: []
  tasks:

    - name: Load successful VMs from JSON file
      slurp:
        src: "/tmp/successful_vms.json"
      register: successful_vms_file

    - name: Set successful_vms fact
      set_fact:
        successful_vms: "{{ successful_vms_file.content | b64decode | from_json }}"

    - name: Ensure we have successful VMs
      assert:
        that:
          - successful_vms | length > 0
        fail_msg: "No successful VMs found. Nothing to post-configure."
        success_msg: "Found {{ successful_vms | length }} VMs to post-configure."

    - name: Add each VM IP to dynamic inventory group
      add_host:
        name: "{{ item.ip_address }}"
        groups: new_vms
      loop: "{{ successful_vms }}"

# Play 2: Run Post VM Configuration on all new VMs
- hosts: new_vms
  gather_facts: no
  tasks:

    # 🕐 Wait 5 minutes before attempting SSH
    - name: Wait 5 minutes for VM to finish booting
      pause:
        minutes: 5
      when: successful_vms is defined and successful_vms | length > 0

    # ✅ Fixed — no async here
    - name: Wait for SSH to be available
      wait_for_connection:
        delay: 10
        timeout: 300

    - name: Remove old SSH key from known_hosts
      delegate_to: localhost
      shell: ssh-keygen -R {{ inventory_hostname }}
      ignore_errors: true

    - name: Add new SSH key to known_hosts
      delegate_to: localhost
      shell: ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts
      ignore_errors: true

