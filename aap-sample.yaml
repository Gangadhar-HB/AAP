---
- name: Deploy a KVM Virtual Machine using AAP + community.libvirt
  hosts: localhost
  gather_facts: false
  collections:
    - community.libvirt
    - ansible.builtin

  vars:
    vm_name: demo-aap-vm
    vm_memory_mb: 2048
    vm_vcpus: 2
    vm_disk_size_gb: 10
    base_image_path: /var/lib/libvirt/images/centos-stream9.qcow2
    vm_disk_path: /var/lib/libvirt/images/{{ vm_name }}.qcow2
    vm_network: default
    vm_os_variant: centos-stream9
    vm_autostart: true

  tasks:

    - name: Ensure libvirt connection works
      ansible.builtin.command: virsh list --all
      register: virsh_output
      changed_when: false
      failed_when: virsh_output.rc != 0
      tags: check

    - name: Create storage volume for VM
      community.libvirt.virt_volume:
        pool: default
        name: "{{ vm_name }}.qcow2"
        capacity: "{{ vm_disk_size_gb }}G"
        backing_store:
          path: "{{ base_image_path }}"
        format: qcow2
      register: volume_result

    - name: Create and start VM
      community.libvirt.virt:
        name: "{{ vm_name }}"
        state: running
        memory: "{{ vm_memory_mb }}"
        vcpus: "{{ vm_vcpus }}"
        os_variant: "{{ vm_os_variant }}"
        disks:
          - name: "{{ vm_name }}.qcow2"
            pool: default
            device: disk
            boot_order: 1
        networks:
          - network: "{{ vm_network }}"
        console:
          type: pty
          target_type: serial
          target_port: 0
        graphics:
          type: vnc
          listen_type: address
          listen_address: 0.0.0.0
        autostart: "{{ vm_autostart }}"
        boot_dev:
          - hd
      register: vm_create_result

    - name: Pause briefly to allow boot
      ansible.builtin.pause:
        seconds: 10

    - name: Gather VM info
      community.libvirt.virt_info:
        name: "{{ vm_name }}"
      register: vm_info

    - name: Print VM details
      ansible.builtin.debug:
        msg:
          - "VM Name: {{ vm_name }}"
          - "State: {{ vm_info[vm_name].state }}"
          - "Memory: {{ vm_info[vm_name].memory }}"
          - "VCPUs: {{ vm_info[vm_name].vcpus }}"
          - "Autostart: {{ vm_autostart }}"
