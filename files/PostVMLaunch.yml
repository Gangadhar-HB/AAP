---
# files/PostVMLaunch.yml
# Purpose: Run post-launch checks and configuration on each VM (parallel-safe)

- name: Initialize VM facts
  ansible.builtin.set_fact:
    vm_name: "{{ inventory_hostname }}"
    vm_primary_ip: "{{ ansible_host | default(inventory_hostname) }}"

- name: Wait for SSH port to be open
  ansible.builtin.wait_for:
    port: 22
    host: "{{ vm_primary_ip }}"
    timeout: 300
    state: started

- name: Clean old SSH host key (local)
  ansible.builtin.shell: ssh-keygen -R {{ vm_primary_ip }}
  delegate_to: localhost
  ignore_errors: true

- name: Add VM SSH key to known_hosts (local)
  ansible.builtin.shell: ssh-keyscan -H {{ vm_primary_ip }} >> ~/.ssh/known_hosts
  delegate_to: localhost
  ignore_errors: true

# ============================
# ✅ HEALTH & CONFIG CHECKS
# ============================

- name: Check for configuration script on VM
  ansible.builtin.find:
    paths: /root/logs/vm_config_thin_vol.sh/
    patterns: "script*"
    recurse: no
  register: found_scripts
  become: true
  ignore_errors: true

- name: Search logs for errors
  ansible.builtin.shell: |
    grep -iE "ERROR" {{ found_scripts.files | map(attribute='path') | join(' ') }} || true
  register: log_errors
  become: true
  when: found_scripts.files | length > 0

- name: Fail if any errors are found in logs
  ansible.builtin.fail:
    msg: |
      ERROR(s) detected in logs on {{ vm_name }}:
      {{ log_errors.stdout_lines | join('\n') }}
  when:
    - log_errors is defined
    - log_errors.stdout is defined
    - log_errors.stdout | trim | length > 0

# ============================
# ✅ COSIGN CONFIG (optional)
# ============================

- name: Run cosign upgrade if parameters provided
  when:
    - repo_url is defined
    - cosign_pub_key_file is defined
  block:
    - name: Import cosign upgrade tasks
      ansible.builtin.import_tasks: cosign_upg.yml
      become: yes

    - name: Copy cosign_failed_vms to remote
      ansible.builtin.copy:
        src: "{{ cosign_failed_vms }}"
        dest: "/DGdata/Software/{{ cosign_failed_vms | basename }}"
        mode: '0644'
      become: yes

- name: Skipping cosign verification
  ansible.builtin.debug:
    msg: "Skipping cosign verification — parameters not defined"
  when:
    - repo_url is not defined or cosign_pub_key_file is not defined

# ============================
# ✅ NETWORK FIXES
# ============================

- name: Ensure 'dns' is appended to hosts line in /etc/nsswitch.conf
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    regexp: '^hosts:'
    line: "hosts:      files myhostname dns"
  become: yes

- name: Ensure nameserver 8.8.8.8 exists in /etc/resolv.conf
  ansible.builtin.lineinfile:
    path: /etc/resolv.conf
    line: "nameserver 8.8.8.8"
    state: present
  become: yes

# ============================
# ✅ CONFIG RECORD
# ============================

- name: Update configured VM list
  ansible.builtin.lineinfile:
    path: "{{ configured_vms_path }}"
    line: "{{ vm_name }}"
    create: yes
    state: present
  delegate_to: localhost
  become: yes
  run_once: false   # Each host writes its own entry

